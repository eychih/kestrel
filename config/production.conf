# kestrel config for a production system

# where to listen for connections:
port = 22133
host = "0.0.0.0"

log {
  filename = "/var/log/kestrel/kestrel.log"
  roll = "daily"
  level = "info"
}

queue_path = "/var/spool/kestrel"

# when to timeout clients (seconds; 0 = never)
timeout = 0

# when a queue's journal reaches this size, the queue will wait until it
# is empty, and will then rotate the journal.
# (this can also be overridden per queue.)
max_journal_size = 1627721

# maximum amount of a queue to keep in memory. if a queue grows larger than
# this (in bytes), it will drop into read-behind mode, with only this amount
# kept in memory.
# (this can also be overridden per queue.)
max_memory_size = 134217728

# optional threshold for a forced journal roll.
# if a journal grows this many times larger than the desired max journal
# size, the journal will be forcably re-created.
# for example, if max_journal_size is 16MB, and max_journal_overflow is 10,
# then if the journal grows larger than 160MB, it will be forcably re-created.
max_journal_overflow = 10

# if you would like a timer to periodically sweep through queues and clean
# up expired items (when they are at the head of a queue), set the timer's
# frequency here. 0 (the default) turns it off. this is only useful for queues
# that are rarely (or never) polled, but may contain short-lived items.
#expiration_timer_frequency_seconds = 1

hdfs_dir = "hdfs://localhost:8020/kestrel"

# per-queue config
queues {
  weather_updates {
    # throw away any weather update that's been waiting in the queue for 1800
    # seconds (1,800,000 milliseconds, or 30 mins). if a client uses a
    # shorter expiry, that's honored instead.
    max_age = 1800000

    # refuse SET operations when the queue would exceed this many items.
    max_items = 1500000
  }

  transient_events {
    # don't keep a journal file for this queue. when kestrel exits, any
    # remaining contents will be lost.
    journal off
  }
}
